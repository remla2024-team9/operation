---
- name: Set up K3s server
  hosts: controller
  become: yes
  vars:
    master_node_ip: "192.168.57.10"

  tasks:
    - name: Install K3s server with TLS and external IP settings
      shell: |
        curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--tls-san {{ master_node_ip }} --node-external-ip {{ master_node_ip }}" K3S_NODE_NAME="$HOSTNAME" K3S_KUBECONFIG_MODE="644" sh -
      args:
        executable: /bin/bash

    - name: Wait for K3s server to be ready
      shell: |
        until k3s kubectl get node; do
          sleep 2
        done
      retries: 10
      delay: 15
      register: k3s_server_ready
      until: k3s_server_ready is succeeded

    - name: Fetch K3s token
      fetch:
        src: /var/lib/rancher/k3s/server/node-token
        dest: /vagrant/shared_folder/node-token
        flat: yes

    - name: Create .kube directory
      file:
        path: /home/vagrant/.kube
        state: directory
        mode: '0755'

    - name: Set up kubectl for local use
      shell: |
        k3s kubectl config view --raw > /home/vagrant/.kube/config
      args:
        executable: /bin/bash

    - name: Download Istio
      shell: curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.22.0 sh -
      args:
        executable: /bin/bash

    - name: Install Istio
      shell: istio-1.22.0/bin/istioctl install --set profile=demo -y
      args:
        chdir: /vagrant
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Label the namespace for Istio injection
      shell: kubectl label namespace default istio-injection=enabled
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install Kiali
      shell: kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/addons/kiali.yaml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install Prometheus
      shell: kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/addons/prometheus.yaml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install Grafana
      shell: kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.22/samples/addons/grafana.yaml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Expose Kiali via NodePort
      shell: |
        kubectl expose service kiali --type=NodePort --name=kiali-nodeport --port=20001 -n istio-system --dry-run=client -o yaml | kubectl apply -f -
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Expose Grafana via NodePort
      shell: |
        kubectl expose service grafana --type=NodePort --name=grafana-nodeport --port=3000 -n istio-system --dry-run=client -o yaml | kubectl apply -f -
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Expose Prometheus via NodePort
      shell: |
        kubectl expose service prometheus --type=NodePort --name=prometheus-nodeport --port=9090 -n istio-system --dry-run=client -o yaml | kubectl apply -f -
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Deploy application to Kubernetes
      shell: kubectl apply -f /vagrant/kubernetes/
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Apply Istio Gateway
      shell: kubectl apply -f /vagrant/kubernetes/gateway.yml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Apply Istio Virtual Service
      shell: kubectl apply -f /vagrant/kubernetes/virtualservice.yml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Install Prometheus Operator CRDs
      shell: |
        kubectl apply --validate=false -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
        kubectl apply --validate=false -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/main/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Apply Prometheus Configuration
      shell: kubectl apply -f /vagrant/monitoring/prometheus-config.yml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Apply Prometheus Rules
      shell: kubectl apply -f /vagrant/monitoring/prometheus-rule.yml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml

    - name: Apply Grafana Dashboard Configuration
      shell: kubectl apply -f /vagrant/monitoring/grafana-dashboard-config.yml
      args:
        executable: /bin/bash
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
